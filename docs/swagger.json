{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of students app"
  },
  "servers": [
    {
      "url": "http://localhost:4000"
    },
    {
      "url": "https://aquatrack-bd.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations about water."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email should have at least 'two' domain segments separated by a dot.",
                    "type": "string",
                    "example": "example@domain.com"
                  },
                  "password": {
                    "description": "The user's password can consist of both letters and numbers.",
                    "type": "string",
                    "example": "123df123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/auth"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "auth": {
        "type": "object",
        "required": [
          "_id",
          "email"
        ],
        "properties": {
          "_id": {
            "description": "User`s id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "email": {
            "description": "User`s email",
            "type": "string",
            "example": "example@domain.com"
          },
          "name": {
            "description": "Default user`s name, which can be changed later",
            "type": "string",
            "example": "User"
          },
          "gender": {
            "description": "User`s gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ]
          },
          "weight": {
            "description": "User`s weight",
            "type": "object",
            "properties": {
              "value": {
                "description": "Weight value",
                "type": "number",
                "example": 70
              },
              "unit": {
                "description": "Weight unit",
                "type": "string",
                "example": "kg"
              }
            }
          },
          "dailySportTime": {
            "type": "object",
            "description": "User`s daily sport time",
            "properties": {
              "value": {
                "description": "Daily sport time value",
                "type": "number",
                "example": 12
              },
              "unit": {
                "description": "Daily sport time unit",
                "type": "string",
                "example": "hours"
              }
            }
          },
          "dailyWaterNorm": {
            "type": "object",
            "description": "User`s daily water norm",
            "properties": {
              "value": {
                "description": "Daily water norm value",
                "type": "number",
                "example": 1500
              },
              "unit": {
                "description": "Daily water norm unit",
                "type": "string",
                "example": "ml"
              }
            }
          },
          "avatar": {
            "description": "Link to user's avatar",
            "type": "string",
            "example": "https://cloudinary.com/default-image"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "array",
                      "example": "[{Error`s details}]"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}